name: testing, linting and deploy

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pnpm-version: [8.3.1]

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: use pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}

      - name: install dependencies
        run: pnpm i --frozen-lockfile

      - name: cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

  unit_tests_and_up_coverage:
    needs: install
    environment: codacy_env    
    runs-on: ubuntu-latest

    env:
      CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

    strategy:
      matrix:
        pnpm-version: [8.3.1]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: use pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}

      - name: restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: running tests and generate coverage
        run: pnpm run test:coverage

      - name: up coverage to codacy
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r ./coverage/lcov.info

  linting:
    needs: install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pnpm-version: [8.3.1]

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: use pnpm.js ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}

      - name: restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: check eslint
        run: pnpm run eslint:lint

  lint_tsc:
    needs: install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pnpm-version: [8.3.1]

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: use pnpm.js ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}

      - name: restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: check typescript
        run: pnpm run tsc:lint

  format:
    needs: install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pnpm-version: [8.3.1]

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: use pnpm.js ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}

      - name: restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: verify if prettier is formated
        run: pnpm run prettier:check

  audit:
    needs: install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pnpm-version: [8.3.1]

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: use pnpm.js ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}

      - name: restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: audit packages
        run: pnpm audit

  deploy:
    needs: [unit_tests_and_up_coverage, linting, lint_tsc, format, audit]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    strategy:
      matrix:
        node-version: [16.x]
        pnpm-version: [8.3.1]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: use pnpm.js ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}

      - name: Install dependencies and test
        run: pnpm i --frozen-lockfile

      - name: Build App
        run: pnpm run build

      - name: Deploy with gh-pages
        run: |
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/gabrielogregorio/youtube-reload.git

          echo "copy index to 404 page"
          cp build/index.html build/404.html

          npx gh-pages -d build --add -u "github-actions-bot <support+actions@github.com>"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
